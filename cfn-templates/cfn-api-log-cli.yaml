---
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  This cloudformation template creates the cloud infrastructure for the logging, analysis and 
  notification of various api calls made by an AWS Account.


# ------------------------------------------


# ==========================================
Metadata: {}
# Metadata:


# ==========================================
# Parameters {}
Parameters:

  # ------------------------------------------
  # --- Name give to this project
  ProjectName:
    Description: "The Name given to this Project."
    ConstraintDescription: "Name must satisfy S3 constraints."
    Type: String
    Default: "cfn-api-log-cli"
    MinLength: 3
    MaxLength: 63
    AllowedPattern:
      ^[a-zA-Z0-9.\-_]{1,255}$

  # ------------------------------------------
  # --- SNS Email Notifications
  EmailAddrSNS:
    Description: "Openvpn SNS Email Endpoint"
    ConstraintDescription: "Must be a valid email address"
    Type: String
    Default: "dh.info@posteo.net"
    AllowedPattern:
      ^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$

  # ------------------------------------------
  # --- Parameter Value
  #CloudTrailPathParameter:
  #  Description: Enter the bucket path for your CloudTrail Logs
  #  Type: String
  #  Default: !Sub "${BucketCTrailLogs}/AWSLogs/${AWS::AccountId}/CloudTrail/"


# ==========================================
Conditions: {}
# Conditions:


# ==========================================
Resources:


  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  #         S3 BUCKET DEFINITIONS
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  # ------------------------------------------
  # --- CloudTrail Logs Bucket Definition
  BucketCTrailLogs:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: "Retain"
    UpdateReplacePolicy: "Retain"
    # .............................
    Properties:
      # .............................
      Tags:
        -
          Key: "Project"
          Value: !Sub "${ProjectName}"
      # .............................
      BucketName: !Sub "logs.${ProjectName}"
      # .............................
      BucketEncryption: 
        ServerSideEncryptionConfiguration: 
        - 
          ServerSideEncryptionByDefault: 
            #SSEAlgorithm: "AES256"
            SSEAlgorithm: "aws:kms"
            #KMSMasterKeyID: !Sub "/ce/kms/${AWS::Region}"

  # ------------------------------------------
  # --- CloudTrail Logs Bucket Policy
  BucketCTrailPolicy:
    # .............................
    Type: "AWS::S3::BucketPolicy"
    # .............................
    Properties:
      # .............................
      Bucket: !Ref BucketCTrailLogs
      PolicyDocument: 
        Version: "2012-10-17"
        Id: "CTrailLogsBucketAccess"
        Statement:
          # ---
          - 
            Sid: "AWSCloudTrailAclCheck"
            Effect: "Allow"
            Principal:
                Service: "cloudtrail.amazonaws.com"
            Action: "s3:GetBucketAcl"
            Resource: !Sub "arn:aws:s3:::${BucketCTrailLogs}"
          # ---
          - 
            Sid: "AWSCloudTrailWrite"
            Effect: "Allow"
            Principal:
                Service: "cloudtrail.amazonaws.com"
            Action: "s3:PutObject"
            Resource: !Sub "arn:aws:s3:::${BucketCTrailLogs}/AWSLogs/${AWS::AccountId}/*"
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control


  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  #         CLOUDWATCH LOGS DEFINITIONS
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  # ------------------------------------------
  # --- Log Group Cloudwatch
  CTrailCWatchLogsGrp:
    Type: "AWS::Logs::LogGroup"
    # .............................
    Properties:
      # .............................
      LogGroupName: !Sub "/ce/${ProjectName}"
      #KmsKeyId: !Sub "/ce/kms/${AWS::Region}"


  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  #         CLOUDTRAIL DEFINITIONS
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  # ------------------------------------------
  # --- Trail Definition
  CTrailTrail:
    Type: "AWS::CloudTrail::Trail"
    # .............................
    Properties:
      # .............................
      TrailName: !Sub "${ProjectName}-trail"
      # .............................
      Tags:
        -
          Key: "Project"
          Value: !Sub "${ProjectName}"
      # .............................
      S3BucketName: !Ref BucketCTrailLogs
      # .............................
      IncludeGlobalServiceEvents: true
      IsMultiRegionTrail: true
      EnableLogFileValidation: true
      IsLogging: true
      # .............................
      CloudWatchLogsLogGroupArn: !GetAtt CTrailCWatchLogsGrp.Arn
      CloudWatchLogsRoleArn: !GetAtt CWatchLogsIamRole.Arn
      # .............................


  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  #         IAM POLICIES & ROLES DEFINITIONS
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  # ------------------------------------------
  # --- IAM Role Definition
  CWatchLogsIamRole:
    Type: "AWS::IAM::Role"
    # .............................
    Properties:
      # .............................
      RoleName: !Sub "role.${ProjectName}.cwatch.${AWS::Region}"
      Path: "/service-role/"
      MaxSessionDuration: 3600
      AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"cloudtrail.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
      ManagedPolicyArns: 
        - !Ref CWatchManagedPolicy

  # ------------------------------------------
  # --- IAM Policy Definition
  CWatchManagedPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    # .............................
    Properties:
      # .............................
      ManagedPolicyName: !Sub "service.${ProjectName}.cwatch.${AWS::Region}"
      Path: "/service-role/"
      # .............................
      PolicyDocument: 
        Version: "2012-10-17"
        Id: !Sub "service.${ProjectName}.cwatch"
        Statement:
          # ---
          - Sid: "AWSCloudTrailCreateLogStream"
            Effect: "Allow"
            Action:
              - logs:CreateLogStream
            Resource:
              - !GetAtt CTrailCWatchLogsGrp.Arn
          # ---
          - Sid: "AWSCloudTrailPutLogEvents"
            Effect: Allow
            Action:
              - logs:PutLogEvents
            Resource:
              - !GetAtt CTrailCWatchLogsGrp.Arn


  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  #         GLUE DEFINITIONS
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  # ------------------------------------------
  # --- Glue Create Database Defn
  CloudTrailLogsGlueDatabase:
    Type: AWS::Glue::Database
    # .............................
    Properties:
      # .............................
      CatalogId: !Ref AWS::AccountId
      DatabaseInput: 
        Description: CloudTrail Service Logs Glue Data Catalog
        Name: "db_cloudtrail_service_logs"

  # ------------------------------------------
  # --- Glue Create Table Defn
  CloudTrailLogsGlueTable:
    Type: AWS::Glue::Table
    # .............................
    Properties:
      # .............................
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref CloudTrailLogsGlueDatabase
      # .............................
      TableInput:
        Description: "CloudTrail Service Logs"
        Name: !Join ["_", ["tbl", !Select [1, !Split ["db_", !Ref CloudTrailLogsGlueDatabase]]]]
        TableType: "EXTERNAL_TABLE"
        # .............................
        Parameters: 
          EXTERNAL: "TRUE"
        # .............................
        StorageDescriptor:
          Location: !Sub "s3://${BucketCTrailLogs}/AWSLogs/${AWS::AccountId}/CloudTrail/"
          InputFormat: "com.amazon.emr.cloudtrail.CloudTrailInputFormat"
          OutputFormat: "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"
          # .............................
          SerdeInfo: 
            SerializationLibrary: "com.amazon.emr.hive.serde.CloudTrailSerde"
            Parameters: 
              "serialization.format": "1"
          # .............................     
          Columns: 
            - 
              Name: "eventversion"
              Type: "string"
            - 
              Name: "useridentity"
              Type: "struct<type:string,principalid:string,arn:string,accountid:string,invokedby:string,accesskeyid:string,userName:string,sessioncontext:struct<attributes:struct<mfaauthenticated:string,creationdate:string>,sessionissuer:struct<type:string,principalId:string,arn:string,accountId:string,userName:string>>>"
            - 
              Name: "eventtime"
              Type: "string"
            - 
              Name: "eventsource"
              Type: "string"
            - 
              Name: "eventname"
              Type: "string"
            - 
              Name: "awsregion"
              Type: "string"
            - 
              Name: "sourceipaddress"
              Type: "string"
            - 
              Name: "useragent"
              Type: "string"
            - 
              Name: "errorcode"
              Type: "string"
            - 
              Name: "errormessage"
              Type: "string"
            - 
              Name: "requestparameters"
              Type: "string"
            - 
              Name: "responseelements"
              Type: "string"
            - 
              Name: "additionaleventdata"
              Type: "string"
            - 
              Name: "requestid"
              Type: "string"
            - 
              Name: "eventid"
              Type: "string"
            - 
              Name: "resources"
              Type: "array<struct<ARN:string,accountId:string,type:string>>"
            - 
              Name: "eventtype"
              Type: "string"
            - 
              Name: "apiversion"
              Type: "string"
            - 
              Name: "readonly"
              Type: "string"
            - 
              Name: "recipientaccountid"
              Type: "string"
            - 
              Name: "serviceeventdetails"
              Type: "string"
            - 
              Name: "sharedeventid"
              Type: "string"
            - 
              Name: "vpcendpointid"
              Type: "string"
        # .............................
        PartitionKeys: 
          - 
            Name: "region"
            Type: "string"
          - 
            Name: "year"
            Type: "string"
          - 
            Name: "month"
            Type: "string"
          - 
            Name: "day"
            Type: "string"
  # ------------------------------------------


  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  #         ATHENA DEFINITIONS
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


  # ------------------------------------------
  # --- Athena Create Partition
  CloudTrailPartition:
    Type: AWS::Athena::NamedQuery
    # .............................
    Properties:
      # .............................
      Database: !Ref CloudTrailLogsGlueDatabase
      Description: !Sub "Create Partition for ${ProjectName} CloudTrail Service Logs"
      Name: !Sub "${ProjectName} : Create Partition"
      QueryString: !Sub
        |-
          -- Partition down to the Day:
          ALTER TABLE ${CloudTrailLogsGlueTable}
          ADD PARTITION (
                          region = 'eu-central-1', 
                          YEAR = '2021', 
                          MONTH = '03', 
                          DAY = '19'
                        ) 
          LOCATION 's3://${BucketCTrailLogs}/AWSLogs/${AWS::AccountId}/CloudTrail/eu-central-1/2021/03/19/'

          -- Partition down to the Month:
          ALTER TABLE ${CloudTrailLogsGlueTable}
          ADD PARTITION (
                          region = 'eu-central-1', 
                          YEAR = '2021', 
                          MONTH = '03', 
                          DAY = '*'
                        ) 
          LOCATION 's3://${BucketCTrailLogs}/AWSLogs/${AWS::AccountId}/CloudTrail/eu-central-1/2021/03/'
  # ------------------------------------------

  # ------------------------------------------
  # --- Athena Query Examples
  CloudTrailLogsQueries:
    Type: AWS::Athena::NamedQuery
    # .............................
    Properties:
      # .............................
      Database: !Ref CloudTrailLogsGlueDatabase
      Description: !Sub "Queries for ${ProjectName} CloudTrail Service Logs"
      Name: !Sub "${ProjectName} : Queries"
      QueryString: !Sub
        |-
          -- Simple wide search
          SELECT
            useridentity.arn,
            eventname,
            sourceipaddress,
            eventtime 
          FROM
            ${CloudTrailLogsGlueTable} 
          ORDER BY
            eventtime,
            eventname ASC LIMIT 100;

          -- Base query template
          SELECT
            useridentity.arn,
            eventname,
            sourceipaddress,
            eventtime 
          FROM
            ${CloudTrailLogsGlueTable} 
          WHERE
            region = 'eu-central-1' 
            AND YEAR = '2021' 
            AND MONTH = '03' 
            AND DAY = '19' LIMIT 100;

          -- Query between time slot
          SELECT *
          FROM
            ${CloudTrailLogsGlueTable} 
          WHERE
            eventtime >= '2021-03-26T15:33:00Z' AND
            eventtime < '2021-03-26T16:15:00Z'
          ORDER BY
            eventtime ASC;

          -- General Purpose Event Search
          SELECT
            eventtime,
            eventname,
            eventsource,
            errormessage,
            errorcode,
            sourceipaddress,
            useragent,
            eventType,
            serviceeventdetails,
            useridentity.sessioncontext.sessionissuer.arn 
          FROM
            ${CloudTrailLogsGlueTable} 
          WHERE
            region = 'eu-central-1' 
            AND YEAR = '2021' 
            AND MONTH = '03' 
            AND DAY = '19' 
          ORDER BY
            eventtime,
            eventname ASC LIMIT 10;

          -- WorkMail Event Search
          SELECT
            eventtime,
            eventname,
            eventsource,
            errormessage,
            errorcode,
            sourceipaddress,
            useragent,
            eventType,
            serviceeventdetails,
            useridentity.sessioncontext.sessionissuer.arn 
          FROM
            ${CloudTrailLogsGlueTable} 
          WHERE
            eventsource = 'workmail.amazonaws.com' 
          ORDER BY
            eventtime,
            eventname ASC LIMIT 10;

          -- KMS Decrypt Event Search
          SELECT
            eventtime,
            eventname,
            eventsource,
            sourceipaddress,
            useragent,
            eventType,
            serviceeventdetails,
            useridentity.sessioncontext.sessionissuer.arn 
          FROM
            ${CloudTrailLogsGlueTable} 
          WHERE
            eventsource = 'kms.amazonaws.com'
            AND eventname IN ('Decrypt')
          ORDER BY
            eventtime ASC;

          -- A more specific search
          SELECT
            * 
          FROM
            ${CloudTrailLogsGlueTable} 
          WHERE
            eventsource = 's3.amazonaws.com' 
            AND eventname IN ( 'CreateBucket' )
            AND useridentity.accountid LIKE '%ANONYMOUS%' 
            AND useridentity.arn IS NULL 
            AND requestparameters LIKE '%$[ your bucket name ]%';


          -- Search EC2 security grp modifications between time slice
          SELECT
            eventname,
            useridentity.username,
            sourceipaddress,
            eventtime,
            requestparameters 
          FROM
            ${CloudTrailLogsGlueTable} 
          WHERE
            (
              requestparameters LIKE '%sg-5887f224%' 
              OR requestparameters LIKE '%sg-e214609e%' 
              OR requestparameters LIKE '%eni-6c5ca5a8%' 
            )
            AND eventtime >= '2021-03-19-15T00:00:00Z' 
            AND eventtime < '2021-03-18-15T00:00:00Z' 
          ORDER BY
            eventtime ASC LIMIT 10;


          -- Search for suspicious ConsoleLogin
          SELECT
            useridentity.username,
            sourceipaddress,
            json_extract_scalar(additionaleventdata, '$.MobileVersion') AS MobileVersion,
            eventtime,
            additionaleventdata,
          FROM
            ${CloudTrailLogsGlueTable} 
          WHERE
            eventname = 'ConsoleLogin' 
            AND 
            (
              json_extract_scalar(additionaleventdata, '$.MobileVersion') = 'Yes' 
              OR sourceipaddress NOT LIKE '72.21.%' 
              AND eventtime >= '2021-03-19-15T00:00:00Z' 
              AND eventtime < '2021-03-18-15T00:00:00Z'
            )
          ORDER BY
            eventtime ASC LIMIT 10;


          -- Search AWS event errors
          SELECT
            COUNT (*) AS TotalEvents,
            eventname,
            errorcode,
            errormessage 
          FROM
            ${CloudTrailLogsGlueTable} 
          WHERE
            errorcode IS NOT NULL 
            AND eventtime >= '2017-01-01T00:00:00Z' 
          GROUP BY
            eventname,
            errorcode,
            errormessage 
          ORDER BY
            TotalEvents DESC LIMIT 10;

          -- Top IAM users
          SELECT
            COUNT (*) AS TotalEvents,
            useridentity.username,
            eventname 
          FROM
            ${CloudTrailLogsGlueTable} 
          WHERE
            eventtime >= '2021-01-01T00:00:00Z' 
            AND useridentity.type = 'IAMUser' 
          GROUP BY
            useridentity.username,
            eventname 
          ORDER BY
            TotalEvents DESC;

          -- Top Root Activity
          SELECT
            COUNT (*) AS TotalEvents,
            eventname,
            useridentity.invokedby 
          FROM
            ${CloudTrailLogsGlueTable} 
          WHERE
            eventtime >= '2021-01-01T00:00:00Z' 
            AND useridentity.type = 'Root' 
          GROUP BY
            useridentity.username,
            eventname,
            useridentity.invokedby 
          ORDER BY
            TotalEvents DESC;


          -- Search for DeleteBucket Events
          SELECT
            awsregion,
            replace(unnested.resources_entry.ARN, 'arn:aws:s3:::') AS deleted_bucket,
            eventtime AS time_deleted,
            useridentity.username,
            unnested.resources_entry.accountid AS bucket_acct_id 
          FROM
            ${CloudTrailLogsGlueTable} tbl 
            CROSS JOIN
              UNNEST(tbl.resources) unnested (resources_entry) 
          WHERE
            eventname = 'DeleteBucket' 
          ORDER BY
            eventtime ASC LIMIT 10;
  # ------------------------------------------

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  #         SNS NOTIFICATIONS
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


  # ------------------------------------------
  # --- SNS Topic Definition
  CTrailNoticeTopic:
    Type: "AWS::SNS::Topic"
    # .............................
    Properties:
      DisplayName: "Cloudtrail Events Bulletin"
      TopicName: !Sub "${ProjectName}-bulletin"
      #KmsMasterKeyId: !Sub "/ce/kms/${AWS::Region}"
      # .............................
      Tags:
        -
          Key: "Name"
          Value: !Sub "${ProjectName}-bulletin"
      # ------------------------------------------

  # ------------------------------------------
  # --- SNS Subscription Definition
  CTrailNotificationSubscription:
    Type: "AWS::SNS::Subscription"
    # .............................
    Properties:
      TopicArn: !Ref CTrailNoticeTopic
      Endpoint: !Ref EmailAddrSNS
      Protocol: "email"
      # ------------------------------------------

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  #    CLOUDWATCH CLOUDTRAIL METRIC ALARMS
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


  # ------------------------------------------
  # --- KMS Changes Metric 1
  CTrailMetricKmsChanges:
    Type: AWS::Logs::MetricFilter
    # .............................
    Properties:
      # .............................
      LogGroupName: !Ref CTrailCWatchLogsGrp
      FilterPattern:
        "{($.eventName=CreateAlias)||($.eventName=CreateKey)||($.eventName=Decrypt)||
        ($.eventName=DeleteAlias)||($.eventName=DeleteImportedKeyMaterial)||
        ($.eventName=DeleteImportedKeyMaterial)||($.eventName=DisableKey)||
        ($.eventName=DisableKeyRotation)||($.eventName=EnableKey)||
        ($.eventName=EnableKeyRotation)||($.eventName=Encrypt)||($.eventName=GenerateDataKey)||
        ($.eventName=GenerateDataKeyPair)||($.eventName=GenerateDataKeyPairWithoutPlaintext)||
        ($.eventName=GenerateDataKeyWithoutPlaintext)||($.eventName=GenerateRandom)||
        ($.eventName=ImportKeyMaterial)||($.eventName=ReEncryptFrom)||($.eventName=ReEncryptTo)||
        ($.eventName=ScheduleKeyDeletion)||($.eventName=Sign)||($.eventName=UpdateAlias)||
        ($.eventName=Verify)||($.eventName=CreateGrant)||($.eventName=PutKeyPolicy)||
        ($.eventName=RetireGrant)||($.eventName=RevokeGrant)}"
      MetricTransformations:
        - MetricName: !Sub "${ProjectName}-kms"
          MetricNamespace: !Sub "${ProjectName}-metrics"
          MetricValue: "1"
          DefaultValue: 0
  # ------------------------------------------
  # --- KMS Notification Alarm
  CTrailAlarmKmsChanges:
    Type: "AWS::CloudWatch::Alarm"
    # .............................
    Properties:
      # .............................
      AlarmName: !Sub "${ProjectName}-kms-events"
      AlarmDescription:
        "KMS API calls to Write or Permissions Management."
      # .............................
      ActionsEnabled: true
      AlarmActions:
        - !Ref CTrailNoticeTopic
      # .............................
      MetricName: !Sub "${ProjectName}-kms"
      Namespace: !Sub "${ProjectName}-metrics"
      Statistic: "Sum"
      # .............................
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      # .............................
      EvaluationPeriods: 1
      Threshold: 1
      Period: 300
  # ------------------------------------------

  # ------------------------------------------
  # --- Security Group Changes Metric 2
  CTrailMetricSecurityGrpChanges:
    Type: AWS::Logs::MetricFilter
    # .............................
    Properties:
      # .............................
      LogGroupName: !Ref CTrailCWatchLogsGrp
      FilterPattern:
        "{($.eventName=AuthorizeSecurityGroupIngress)||($.eventName=AuthorizeSecurityGroupEgress)
        ||($.eventName=RevokeSecurityGroupIngress)||($.eventName=RevokeSecurityGroupEgress)
        ||($.eventName=CreateSecurityGroup)||($.eventName=DeleteSecurityGroup)}"
      MetricTransformations:
        - MetricName: !Sub "${ProjectName}-security-group"
          MetricNamespace: !Sub "${ProjectName}-metrics"
          MetricValue: "1"
          DefaultValue: 0
  # ------------------------------------------
  # --- Security Group Notification Alarm
  CTrailAlarmSecurityGrpChanges:
    Type: "AWS::CloudWatch::Alarm"
    # .............................
    Properties:
      # .............................
      AlarmName: !Sub "${ProjectName}-security-group-events"
      AlarmDescription:
        "Security Groups API calls Create, Update or Delete."
      # .............................
      ActionsEnabled: true
      AlarmActions:
        - !Ref CTrailNoticeTopic
      # .............................
      MetricName: !Sub "${ProjectName}-security-group"
      Namespace: !Sub "${ProjectName}-metrics"
      Statistic: "Sum"
      # .............................
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      # .............................
      EvaluationPeriods: 1
      Threshold: 1
      Period: 300
  # ------------------------------------------

  # ------------------------------------------
  # --- Network ACL Changes Metric 3
  CTrailMetricNetworkAclChanges:
    Type: AWS::Logs::MetricFilter
    # .............................
    Properties:
      # .............................
      LogGroupName: !Ref CTrailCWatchLogsGrp
      FilterPattern:
        "{($.eventName=CreateNetworkAcl)||($.eventName=CreateNetworkAclEntry)||
        ($.eventName=DeleteNetworkAcl)||($.eventName=DeleteNetworkAclEntry)||
        ($.eventName=ReplaceNetworkAclEntry)||($.eventName=ReplaceNetworkAclAssociation)}"
      MetricTransformations:
        - MetricName: !Sub "${ProjectName}-network-acl"
          MetricNamespace: !Sub "${ProjectName}-metrics"
          MetricValue: "1"
          DefaultValue: 0
  # ------------------------------------------
  # --- Network ACL Notification Alarm
  CTrailAlarmNetworkAclChanges:
    Type: "AWS::CloudWatch::Alarm"
    # .............................
    Properties:
      # .............................
      AlarmName: !Sub "${ProjectName}-network-acl-events"
      AlarmDescription:
        "Network ACL API calls Create, Update or Delete."
      # .............................
      ActionsEnabled: true
      AlarmActions:
        - !Ref CTrailNoticeTopic
      # .............................
      MetricName: !Sub "${ProjectName}-network-acl"
      Namespace: !Sub "${ProjectName}-metrics"
      Statistic: "Sum"
      # .............................
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      # .............................
      EvaluationPeriods: 1
      Threshold: 1
      Period: 300
  # ------------------------------------------

  # ------------------------------------------
  # --- Gateway Changes Metric 4
  CTrailMetricGatewayChanges:
    Type: AWS::Logs::MetricFilter
    # .............................
    Properties:
      # .............................
      LogGroupName: !Ref CTrailCWatchLogsGrp
      FilterPattern:
        "{($.eventName=CreateCustomerGateway)||($.eventName=DeleteCustomerGateway)
        ||($.eventName=AttachInternetGateway)||($.eventName=CreateInternetGateway)
        ||($.eventName=DeleteInternetGateway)||($.eventName=DetachInternetGateway)}"
      MetricTransformations:
        - MetricName: !Sub "${ProjectName}-gateway"
          MetricNamespace: !Sub "${ProjectName}-metrics"
          MetricValue: "1"
          DefaultValue: 0
  # ------------------------------------------
  # --- Gateway Notification Alarm
  CTrailAlarmGatewayChanges:
    Type: "AWS::CloudWatch::Alarm"
    # .............................
    Properties:
      # .............................
      AlarmName: !Sub "${ProjectName}-gateway-events"
      AlarmDescription:
        "Internet Gateway API calls Create, Update or Delete."
      # .............................
      ActionsEnabled: true
      AlarmActions:
        - !Ref CTrailNoticeTopic
      # .............................
      MetricName: !Sub "${ProjectName}-gateway"
      Namespace: !Sub "${ProjectName}-metrics"
      Statistic: "Sum"
      # .............................
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      # .............................
      EvaluationPeriods: 1
      Threshold: 1
      Period: 300
  # ------------------------------------------

  # ------------------------------------------
  # --- Vpc Changes Metric 5
  CTrailMetricVpcChanges:
    Type: AWS::Logs::MetricFilter
    # .............................
    Properties:
      # .............................
      LogGroupName: !Ref CTrailCWatchLogsGrp
      FilterPattern:
        "{($.eventName=CreateVpc)||($.eventName=DeleteVpc)||($.eventName=ModifyVpcAttribute)
        ||($.eventName=AcceptVpcPeeringConnection)||($.eventName=CreateVpcPeeringConnection)
        ||($.eventName=DeleteVpcPeeringConnection)||($.eventName=RejectVpcPeeringConnection)
        ||($.eventName=AttachClassicLinkVpc)||($.eventName=DetachClassicLinkVpc)
        ||($.eventName=DisableVpcClassicLink)||($.eventName=EnableVpcClassicLink)}"
      MetricTransformations:
        - MetricName: !Sub "${ProjectName}-vpc"
          MetricNamespace: !Sub "${ProjectName}-metrics"
          MetricValue: "1"
          DefaultValue: 0
  # ------------------------------------------
  # --- Vpc Notification Alarm
  CTrailAlarmVpcChanges:
    Type: "AWS::CloudWatch::Alarm"
    # .............................
    Properties:
      # .............................
      AlarmName: !Sub "${ProjectName}-vpc-events"
      AlarmDescription:
        "Vpc API calls Create, Update or Delete."
      # .............................
      ActionsEnabled: true
      AlarmActions:
        - !Ref CTrailNoticeTopic
      # .............................
      MetricName: !Sub "${ProjectName}-vpc"
      Namespace: !Sub "${ProjectName}-metrics"
      Statistic: "Sum"
      # .............................
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      # .............................
      EvaluationPeriods: 1
      Threshold: 1
      Period: 300
  # ------------------------------------------

  # ------------------------------------------
  # --- Ec2Instance Changes Metric 6
  CTrailMetricEc2InstanceChanges:
    Type: AWS::Logs::MetricFilter
    # .............................
    Properties:
      # .............................
      LogGroupName: !Ref CTrailCWatchLogsGrp
      FilterPattern:
        "{($.eventName=RunInstances)||($.eventName=RebootInstances)||
        ($.eventName=StartInstances)||($.eventName=StopInstances)||
        ($.eventName=TerminateInstances)}"
      MetricTransformations:
        - MetricName: !Sub "${ProjectName}-ec2instance"
          MetricNamespace: !Sub "${ProjectName}-metrics"
          MetricValue: "1"
          DefaultValue: 0
  # ------------------------------------------
  # --- Ec2Instance Notification Alarm
  CTrailAlarmEc2InstanceChanges:
    Type: "AWS::CloudWatch::Alarm"
    # .............................
    Properties:
      # .............................
      AlarmName: !Sub "${ProjectName}-ec2instance-events"
      AlarmDescription:
        "Ec2Instance API calls Create, Terminate, Start, Stop or Reboot."
      # .............................
      ActionsEnabled: true
      AlarmActions:
        - !Ref CTrailNoticeTopic
      # .............................
      MetricName: !Sub "${ProjectName}-ec2instance"
      Namespace: !Sub "${ProjectName}-metrics"
      Statistic: "Sum"
      # .............................
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      # .............................
      EvaluationPeriods: 1
      Threshold: 1
      Period: 300
  # ------------------------------------------

  # ------------------------------------------
  # --- Ec2LargeInstance Changes Metric 7
  CTrailMetricEc2LargeInstanceChanges:
    Type: AWS::Logs::MetricFilter
    # .............................
    Properties:
      # .............................
      LogGroupName: !Ref CTrailCWatchLogsGrp
      FilterPattern:
        "{($.eventName=RunInstances)&&(($.requestParameters.instanceType=*.8xlarge)
        ||($.requestParameters.instanceType=*.4xlarge))}"
      MetricTransformations:
        - MetricName: !Sub "${ProjectName}-ec2large-instance"
          MetricNamespace: !Sub "${ProjectName}-metrics"
          MetricValue: "1"
          DefaultValue: 0
  # ------------------------------------------
  # --- Ec2LargeInstance Notification Alarm
  CTrailAlarmEc2LargeInstanceChanges:
    Type: "AWS::CloudWatch::Alarm"
    # .............................
    Properties:
      # .............................
      AlarmName: !Sub "${ProjectName}-ec2large-instance-events"
      AlarmDescription:
        "Ec2LargeInstance API calls Create, Terminate, Start, Stop or Reboot."
      # .............................
      ActionsEnabled: true
      AlarmActions:
        - !Ref CTrailNoticeTopic
      # .............................
      MetricName: !Sub "${ProjectName}-ec2large-instance"
      Namespace: !Sub "${ProjectName}-metrics"
      Statistic: "Sum"
      # .............................
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      # .............................
      EvaluationPeriods: 1
      Threshold: 1
      Period: 300
  # ------------------------------------------

  # ------------------------------------------
  # --- CloudTrail Changes Metric 8
  CTrailMetricCloudTrailChanges:
    Type: AWS::Logs::MetricFilter
    # .............................
    Properties:
      # .............................
      LogGroupName: !Ref CTrailCWatchLogsGrp
      FilterPattern:
        "{($.eventName=CreateTrail)||($.eventName=UpdateTrail)
        ||($.eventName=DeleteTrail)||($.eventName=StartLogging)
        ||($.eventName=StopLogging)}"
      MetricTransformations:
        - MetricName: !Sub "${ProjectName}-cloudtrail"
          MetricNamespace: !Sub "${ProjectName}-metrics"
          MetricValue: "1"
          DefaultValue: 0
  # ------------------------------------------
  # --- CloudTrail Notification Alarm
  CTrailAlarmCloudTrailChanges:
    Type: "AWS::CloudWatch::Alarm"
    # .............................
    Properties:
      # .............................
      AlarmName: !Sub "${ProjectName}-cloudtrail-events"
      AlarmDescription: 
        "CloudTrail API calls Create, Update or Delete as well as Start or Stop Logging"
      # .............................
      ActionsEnabled: true
      AlarmActions:
        - !Ref CTrailNoticeTopic
      # .............................
      MetricName: !Sub "${ProjectName}-cloudtrail"
      Namespace: !Sub "${ProjectName}-metrics"
      Statistic: "Sum"
      # .............................
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      # .............................
      EvaluationPeriods: 1
      Threshold: 1
      Period: 300
  # ------------------------------------------

  # ------------------------------------------
  # --- IamPolicy Changes Metric 9
  CTrailMetricIamPolicyChanges:
    Type: AWS::Logs::MetricFilter
    # .............................
    Properties:
      # .............................
      LogGroupName: !Ref CTrailCWatchLogsGrp
      FilterPattern:
        "{($.eventName=DeleteGroupPolicy)||($.eventName=DeleteRolePolicy)||
        ($.eventName=DeleteUserPolicy)||($.eventName=PutGroupPolicy)||
        ($.eventName=PutRolePolicy)||($.eventName=PutUserPolicy)||
        ($.eventName=CreatePolicy)||($.eventName=DeletePolicy)||
        ($.eventName=CreatePolicyVersion)||($.eventName=DeletePolicyVersion)||
        ($.eventName=AttachRolePolicy)||($.eventName=DetachRolePolicy)||
        ($.eventName=AttachUserPolicy)||($.eventName=DetachUserPolicy)||
        ($.eventName=AttachGroupPolicy)||($.eventName=DetachGroupPolicy)}"
      MetricTransformations:
        - MetricName: !Sub "${ProjectName}-iam-policy"
          MetricNamespace: !Sub "${ProjectName}-metrics"
          MetricValue: "1"
          DefaultValue: 0
  # ------------------------------------------
  # --- IamPolicy Notification Alarm
  CTrailAlarmIamPolicyChanges:
    Type: "AWS::CloudWatch::Alarm"
    # .............................
    Properties:
      # .............................
      AlarmName: !Sub "${ProjectName}-iam-policy-events"
      AlarmDescription:
        "Iam Policy API calls Create, Update or Delete."
      # .............................
      ActionsEnabled: true
      AlarmActions:
        - !Ref CTrailNoticeTopic
      # .............................
      MetricName: !Sub "${ProjectName}-iam-policy"
      Namespace: !Sub "${ProjectName}-metrics"
      Statistic: "Sum"
      # .............................
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      # .............................
      EvaluationPeriods: 1
      Threshold: 1
      Period: 300
  # ------------------------------------------

  # ------------------------------------------
  # --- Console SignIn Failures Metric 10
  CTrailMetricConsoleSignInFailures:
    Type: AWS::Logs::MetricFilter
    # .............................
    Properties:
      # .............................
      LogGroupName: !Ref CTrailCWatchLogsGrp
      FilterPattern:
        '{($.eventName=ConsoleLogin)&&($.errorMessage="Failed authentication")}'
      MetricTransformations:
        - MetricName: !Sub "${ProjectName}-signin-fail"
          MetricNamespace: !Sub "${ProjectName}-metrics"
          MetricValue: "1"
          DefaultValue: 0
  # ------------------------------------------
  # --- Console SignIn Failures Notification Alarm
  CTrailAlarmConsoleSignInFailures:
    Type: "AWS::CloudWatch::Alarm"
    # .............................
    Properties:
      # .............................
      AlarmName: !Sub "${ProjectName}-signin-fail-events"
      AlarmDescription:
        "Console SignIn API Failures."
      # .............................
      ActionsEnabled: true
      AlarmActions:
        - !Ref CTrailNoticeTopic
      # .............................
      MetricName: !Sub "${ProjectName}-signin-fail"
      Namespace: !Sub "${ProjectName}-metrics"
      Statistic: "Sum"
      # .............................
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      # .............................
      EvaluationPeriods: 1
      Threshold: 1
      Period: 300
  # ------------------------------------------

  # ------------------------------------------
  # --- Authorization Failures Metric 11
  CTrailMetricAuthorizationFailures:
    Type: AWS::Logs::MetricFilter
    # .............................
    Properties:
      # .............................
      LogGroupName: !Ref CTrailCWatchLogsGrp
      FilterPattern:
        '{($.errorCode="*UnauthorizedOperation")||($.errorCode="AccessDenied*")}'
      MetricTransformations:
        - MetricName: !Sub "${ProjectName}-authorization-fail"
          MetricNamespace: !Sub "${ProjectName}-metrics"
          MetricValue: "1"
          DefaultValue: 0
  # ------------------------------------------
  # --- Authorization Failures Notification Alarm
  CTrailAlarmAuthorizationFailures:
    Type: "AWS::CloudWatch::Alarm"
    # .............................
    Properties:
      # .............................
      AlarmName: !Sub "${ProjectName}-authorization-fail-events"
      AlarmDescription:
        "Authorization Failure API calls."
      # .............................
      ActionsEnabled: true
      AlarmActions:
        - !Ref CTrailNoticeTopic
      # .............................
      MetricName: !Sub "${ProjectName}-authorization-fail"
      Namespace: !Sub "${ProjectName}-metrics"
      Statistic: "Sum"
      # .............................
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      # .............................
      EvaluationPeriods: 1
      Threshold: 1
      Period: 300
  # ------------------------------------------


# ==========================================
Outputs: {}
# Outputs:


